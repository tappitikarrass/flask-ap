openapi: 3.0.1
info:
  title: Anime Catalogue
  description: >-
    This is a anime catalogue api   
  termsOfService: http://example.com/terms/
  contact:
    email: example@company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8000
tags:
  - name: anime
    description: Add/Remove anime in lists
  - name: list
    description: Access anime lists
  - name: user
    description: Access users
paths:
# ANIME
  /anime/{mal_id}:
    get:
      tags:
        - anime
      summary: Get anime info
      operationId: getAnime
      parameters:
        - name: mal_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
        '403':
          description: Forbidden
      security:
        - bearerAuth: []
# LIST
  /list/{username}:
    get:
      tags:
        - list
      summary: Get lists by username
      operationId: getLists
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - bearerAuth: []
  /list:
    post:
      tags:
        - list
      summary: Create list
      operationId: createList
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/List'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '422':
          description: Bad Authorization Header
      x-codegen-request-body-name: body
      security:
        - bearerAuth: []
  /list/{username}/{list_id}/{mal_id}:
    get:
      tags:
        - list
      summary: Remove anime from list
      operationId: removeAnime
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: list_id
          in: path
          required: true
          schema:
            type: integer
        - name: mal_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnime'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Bad Authorization Header
      security:
        - bearerAuth: []
  /list/{username}/{list_id}:
    post:
      tags:
        - list
      summary: Add anime to list
      operationId: addAnime
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: list_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnime'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Bad Authorization Header
      x-codegen-request-body-name: body
      security:
        - bearerAuth: []
    get:
      tags:
        - list
      summary: Get list by id
      operationId: getListById
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: list_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Bad Authorization Header
      security:
        - bearerAuth: []
    put:
      tags:
        - list
      summary: Update list by id
      operationId: updateListById
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: list_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/List'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Bad Authorization Header
      x-codegen-request-body-name: body
      security:
        - bearerAuth: []
    delete:
      tags:
        - list
      summary: Delete list by id
      operationId: deleteListById
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: list_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
        '422':
          description: Bad Authorization Header
      security:
        - bearerAuth: []
# USER
  /user:
    get:
      tags:
        - user
      summary: Get users
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - user
      summary: Create user
      operationId: createUser
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
      x-codegen-request-body-name: body
  /login:
    post:
      tags:
        - user
      summary: Login user
      operationId: loginUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - basicAuth: []
  /logout:
    delete:
      tags:
        - user
      summary: Logout user
      operationId: logoutUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    default: JWT Revoked
        '401':
          description: Unauthorized
        '422':
          description: Bad Authorization Header
      security:
        - bearerAuth: []
  /user/{user_id}:
    get:
      tags:
        - user
      summary: Get user by id
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Bad Authorization Header
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      summary: Update user by id
      operationId: updateUserById
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Bad Authorization Header
      x-codegen-request-body-name: body
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      summary: Delete user by id
      operationId: deleteUserById
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
        '422':
          description: Bad Authorization Header
      security:
        - bearerAuth: []
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          default: 1
        username:
          type: string
          default: "ivanfranko"
        firstname:
          type: string
          default: "Ivan"
        lastname:
          type: string
          default: "Franko"
        email:
          type: string
          default: "franko@liamg.com"
        phone:
          type: string
          default: "321"
        password:
          type: string
          default: "ukraina"
      xml:
        name: User
    Admin:
      type: object
      properties:
        admin_id:
          type: integer
        user_id:
          type: integer
      xml:
        name: Admin
    List:
      type: object
      properties:
        list_id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: List
    ListAnime:
      type: object
      properties:
        list_id:
          type: integer
        mal_id:
          type: integer
      xml:
        name: ListAnime
    Anime:
      type: object
      properties:
        mal_id:
          type: integer
        title:
          type: string
        score:
          type: number
        genres:
          type: array
          items:
            type: integer
        duration:
          type: string
        rating:
          type: string
        image_url:
          type: string
      xml:
        name: Anime
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
